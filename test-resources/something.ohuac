ns some_ns;

use sf ohua::math::{add, isZero};
use algo some::module::a;

fn square (x : int) -> int {
    add(x, x)
}

// a line comment for test reasons
fn algo1 (someParam : mut T) -> (A, Bool) {
    let a = square(someParam);


    /* a block comment
    for test reasons */
    let coll0 = for i in coll {
        square(i)
    };

    if (isZero(a)) {
        coll0
    } else {
        a
    }
    /* another block comment
    for test reasons */

}

fn main (param : SomeType) {
    algo0(param)
}
